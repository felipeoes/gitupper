services:
  # web:
  #   build: .
  #   ports:
  #     - "80:8000"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   command: ["python", "app.py"]
 
  db:
    image: postgres:16.4
    container_name: postgres16_4
    restart: always
    environment:
      PG_USER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
        - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis:7.4
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    # networks:
    #   - redis-django

  # networks:
  #   redis-django:
  #     driver: bridge

