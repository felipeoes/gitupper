# Generated by Django 3.2.9 on 2022-05-02 18:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gitupper.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now, verbose_name='date joined')),
                ('gitupper_id', models.BigAutoField(
                    primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=60,
                 unique=True, verbose_name='email')),
                ('profile_image', models.ImageField(default='images/user_default.png', null=True,
                 upload_to=gitupper.user.models.get_images_directory, verbose_name='Image')),
                ('first_name', models.CharField(
                    max_length=30, verbose_name='first_name')),
                ('last_name', models.CharField(
                    max_length=30, verbose_name='last_name')),
                ('bee_id', models.CharField(max_length=9, null=True, unique=True)),
                ('leet_id', models.CharField(max_length=50, null=True, unique=True)),
                ('hacker_id', models.IntegerField(null=True, unique=True)),
                ('github_id', models.IntegerField(null=True, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('verify_token', models.CharField(max_length=64, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                 related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                 related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RepoComment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RepoEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='TemporaryProgress',
            fields=[
                ('gitupper_id', models.BigIntegerField(
                    primary_key=True, serialize=False)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RepoSubmission',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('submission', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='RepoEventReaction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('reaction', models.CharField(max_length=20)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('repo_event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='gitupper.repoevent')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='repoevent',
            name='associated_submissions',
            field=models.ManyToManyField(
                blank=True, to='gitupper.RepoSubmission'),
        ),
        migrations.AddField(
            model_name='repoevent',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='RepoCommentReply',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='gitupper.repocomment')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='repocomment',
            name='repo_event',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='gitupper.repoevent'),
        ),
        migrations.AddField(
            model_name='repocomment',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LeetUser',
            fields=[
                ('leet_id', models.CharField(max_length=9,
                 primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=60,
                 unique=True, verbose_name='email')),
                ('access_token', models.CharField(max_length=1024, null=True)),
                ('gitupper_user', models.OneToOneField(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeetSubmission',
            fields=[
                ('id', models.CharField(max_length=50,
                 primary_key=True, serialize=False)),
                ('problem_number', models.IntegerField()),
                ('problem_name', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('prog_language', models.CharField(max_length=20)),
                ('category', models.CharField(max_length=20)),
                ('date_submitted', models.DateTimeField()),
                ('source_code', models.TextField()),
                ('filename', models.CharField(max_length=100)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='gitupper.leetuser')),
            ],
        ),
        migrations.CreateModel(
            name='HackerUser',
            fields=[
                ('hacker_id', models.IntegerField(
                    primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=60,
                 unique=True, verbose_name='email')),
                ('access_token', models.CharField(max_length=256, null=True)),
                ('gitupper_user', models.OneToOneField(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HackerSubmission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('problem_name', models.CharField(max_length=100)),
                ('challenge_id', models.IntegerField()),
                ('contest_id', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('prog_language', models.CharField(max_length=20)),
                ('category', models.CharField(max_length=20)),
                ('date_submitted', models.DateTimeField()),
                ('source_code', models.TextField()),
                ('display_score', models.FloatField()),
                ('filename', models.CharField(max_length=100)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='gitupper.hackeruser')),
            ],
        ),
        migrations.CreateModel(
            name='BeeUser',
            fields=[
                ('bee_id', models.CharField(max_length=9,
                 primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=60,
                 unique=True, verbose_name='email')),
                ('access_token', models.CharField(max_length=256, null=True)),
                ('gitupper_user', models.OneToOneField(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BeeSubmission',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('problem_number', models.IntegerField()),
                ('problem_name', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('prog_language', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=5)),
                ('date_submitted', models.DateTimeField()),
                ('source_code', models.TextField()),
                ('filename', models.CharField(max_length=100)),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='gitupper.beeuser')),
            ],
        ),
    ]
